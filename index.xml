<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dopos</title><link>https://dopos.github.io/</link><description>Recent content on dopos</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Sat, 11 Jan 2020 14:09:21 +0900</lastBuildDate><atom:link href="https://dopos.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Ноябрь 2021</title><link>https://dopos.github.io/updates/2021_november/</link><pubDate>Wed, 17 Nov 2021 00:02:03 +0300</pubDate><guid>https://dopos.github.io/updates/2021_november/</guid><description>dcape v2.1.1 Release: v2.1.1
dcape v2.1.0 Github: dcape
Release: v2.1.0
docker-образы вспомогательных сервисов теперь размещены на ghcr и собираются для архитектур linux/amd64, linux/arm/v7, linux/arm64 первично протестирована поддержка для linux/arm64 обновлены версии используемых приложений</description></item><item><title>Январь 2021</title><link>https://dopos.github.io/updates/2021_january/</link><pubDate>Thu, 28 Jan 2021 00:10:37 +0900</pubDate><guid>https://dopos.github.io/updates/2021_january/</guid><description>Github: dcape
Release: v2.0.0
Этот релиз фиксирует завершение работ по переезду на traefik v2 и подготовке русскоязычной части документации.</description></item><item><title>Ноябрь 2020</title><link>https://dopos.github.io/updates/2020_november/</link><pubDate>Fri, 11 Aug 2017 00:10:37 +0900</pubDate><guid>https://dopos.github.io/updates/2020_november/</guid><description>Github: dcape
Release: v1.1, Two years in production
Этот релиз фиксирует состояние проекта перед началом работ по переезду на traefik v2. Дальнейшее развитие будет производиться в одноименной ветке репозитория.</description></item><item><title>Сентябрь 2018</title><link>https://dopos.github.io/updates/2018_september/</link><pubDate>Fri, 11 Aug 2017 00:10:37 +0900</pubDate><guid>https://dopos.github.io/updates/2018_september/</guid><description>v1.0.0-rc2 Date: 2018-09-23
Github: dcape
Release: v1.0.0-rc2, Use apisite
Изменено apps/enfist: вместо pgrpc теперь используется apisite Установка обновления 1 2 3 4 5 git pull mv .env .env.bak make init make enfist-apply make up</description></item><item><title>Октябрь 2017</title><link>https://dopos.github.io/updates/2017_october/</link><pubDate>Fri, 11 Aug 2017 00:10:37 +0900</pubDate><guid>https://dopos.github.io/updates/2017_october/</guid><description>v1.0.0-rc1 Date: 2017-10-22
Github: dcape
Release: v1.0.0-rc1, Ready to use
Изменено apps/traefik*: в настройки вынесен редирект 80 -&amp;gt; 443 apps/traefik теперь не совместим по конфигу с apps/traefik-acme, при переключении необходим make init v0.10 Date: 2017-10-19
Изменено apps/cis: добавлено создание каталогов var/apps, var/log в cis-apply apps/cis: изменена версия webtail (0.12) apps/enfist: исправлено обновление sql-пакетов enfist,rpc и их текущие версии Добавлено Файл CHANGELOG.md README.md: информация о зависимости (gawk), уточнен блок &amp;ldquo;Быстрый старт&amp;rdquo; DEPLOY.</description></item><item><title>Август 2017</title><link>https://dopos.github.io/updates/2017_august/</link><pubDate>Fri, 11 Aug 2017 00:10:37 +0900</pubDate><guid>https://dopos.github.io/updates/2017_august/</guid><description>Github: dcape
Commit: v0.1, code working in general
Начало опытной эксплуатации dcape.</description></item><item><title>Февраль 2015</title><link>https://dopos.github.io/updates/2015_february/</link><pubDate>Tue, 28 Jan 2020 00:10:37 +0900</pubDate><guid>https://dopos.github.io/updates/2015_february/</guid><description>Github: fidm
Commit: init
Начало разработки аналога fig, утилиты для управления контейнерами Docker, которая была доступна на сайте fig.sh.</description></item><item><title>Ноябрь 2014</title><link>https://dopos.github.io/updates/2014_november/</link><pubDate>Wed, 12 Nov 2014 00:00:00 +0000</pubDate><guid>https://dopos.github.io/updates/2014_november/</guid><description>Github: consup
Commit: init
Начало работ по построению решения для автоматизации работы с контейнерами docker.</description></item><item><title>Минимальная конфигурация</title><link>https://dopos.github.io/dcape/gettingstarted/minimal/</link><pubDate>Wed, 07 Feb 2024 00:34:41 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/minimal/</guid><description>Dcape может быть развернут в конфигурации CLI-only, с минимальным набором контейнеров
router (traefik) - реверс-прокси и сертификаты db (postgresql) - БД для приложений (не используется dcape) manager (portainer) - www-интерфейс для управления контейнерами (не используется dcape) при этом
Сертификаты LE обновляются через HTTP-1 (нет поддержки wildcard доменов) Доступ в traefik dashboard происходит по фиксированному паролю Далее описано, как получить такую конфигурацию в текущей версии dcape
1 2 3 4 5 git clone --single-branch --depth 1 https://github.</description></item><item><title>traefik</title><link>https://dopos.github.io/dcape/baseapps/traefik/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://dopos.github.io/dcape/baseapps/traefik/</guid><description>Приложение traefik Docker traefik Назначение агрегация и проксирование www-сервисов развернутых приложений по заданному имени с поддержкой сертификатов Let&amp;rsquo;s Encrypt Назначение Traefik - ключевой сервис dcape. Он решает следующие задачи:
при запуске контейнера проанализировать его метки (label) и добавить контейнер в систему проксирования внешних http(s) запросов, определяя целевой контейнер по имени хоста если конфигурацией предусмотрена работа через TLS - проверить наличие сертификата и, при необходимости, получить или обновить его через сервис Let&amp;rsquo;s Encrypt Особенности Варианты файла конфигурации В составе dcape есть три варианта файла конфигурации traefik:</description></item><item><title>Приложения</title><link>https://dopos.github.io/dcape/usage/apps/</link><pubDate>Tue, 28 Jan 2020 00:36:14 +0900</pubDate><guid>https://dopos.github.io/dcape/usage/apps/</guid><description>Введение Dcape v2 предназначен для построения gitops (CI/CD) решений, в которых на каждом сервере установлен dcape и на одном - web-сервис git (например: gitea), который по факту изменений в репозитории активирует drone на присоединенных серверах.
После развёртывания сервисов git/drone, задача dcape уже решена, но возникает возможность добавить в деплой:
docker-compose.yml Makefile Эти файлы добавляются в образ dcape-compose, поэтому доступны и на хостовой системе и при развёртывании. Для работы с ними в Makefile приложения надо добавить директивы:</description></item><item><title>Назначение</title><link>https://dopos.github.io/dcape/purpose/</link><pubDate>Tue, 28 Jan 2020 00:34:51 +0900</pubDate><guid>https://dopos.github.io/dcape/purpose/</guid><description>Зачем это нужно Цель создания dcape - получить относительно удобный способ запуска docker-приложений простой короткой командой, например
make up - локально git push - удаленно Главная проблема была в том, как повесить несколько контейнеров на порт 80, чтобы запросы к ним проксировались по имени хоста не на основании заранее руками созданного конфига, а по факту старта контейнера - эту задачу решил traefik.
Бонусом он добавил TLS, т.е. возможность получения сертификата для хоста или, когда хостов много - для домена (т.</description></item><item><title>Быстрый старт</title><link>https://dopos.github.io/dcape/gettingstarted/quickstart/</link><pubDate>Tue, 28 Jan 2020 00:34:41 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/quickstart/</guid><description>В случае, если уже
настроен DNS c поддержкой wildcard-record есть сервер gitea (в примере - it.domain.tld) в gitea создан TOKEN на новом сервере установлены зависимости , установка dcape на этом новом сервере может быть произведена так:
1 2 3 4 5 6 7 8 9 git clone -b v2 --single-branch --depth 1 https://github.com/dopos/dcape.git cd dcape make install ACME=wild DNS=wild DCAPE_DOMAIN=srv1.domain.tld \ TRAEFIK_ACME_EMAIL=admin@domain.tld \ NARRA_GITEA_ORG=dcape \ DRONE_ADMIN=lekovr \ PDNS_LISTEN=192.168.23.10:53 \ GITEA=https://it.domain.tld \ TOKEN=**token_from_gitea** В PDNS_LISTEN порт изменен на стандартный (по умолчанию: 54) и задан ip, чтобы не возникало конфликта с локальным резолвером.</description></item><item><title>postgresql</title><link>https://dopos.github.io/dcape/baseapps/postgresql/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://dopos.github.io/dcape/baseapps/postgresql/</guid><description>Приложение postgresql Docker postgres Назначение хранение конфигураций всех приложений и размещение баз данных приложений, которым требуется СУБД Назначение СУБД postgresql используется следующими сервисами dcape:
gitea drone enfist powerdns Кроме этого, контейнер доступен для других приложений, развертываемых под dcape.
Особенности Размещение файлов Постоянные данные контейнера размещаются в каталоге var/db в следующих подкаталогах:
data - внутренние файлы postgresql init - скрипты, которые выполняются при старте контейнера backup - размещение дампов баз для импорта/экспорта conf.</description></item><item><title>Обновление</title><link>https://dopos.github.io/dcape/usage/update/</link><pubDate>Tue, 28 Jan 2020 00:39:06 +0900</pubDate><guid>https://dopos.github.io/dcape/usage/update/</guid><description>Если dcape был установлен командой git clone, для его обновления используется команда git pull, после выполнения которой необходимо обновить файл .env
Обновление файла .env При обновлении проекта возможно появление новых переменных в .env файле.
Алгоритм обновления .env с сохранением старых настроек:
1 2 mv .env .env.bak make init Другой вариант:
1 2 mv .env .env.1019 make init CFG_BAK=.env.1019 Все совпадающие значения будут взяты из .env.bak (т.е. из старого конфига).
Если изменятся номера версий используемых docker-образов сервисов dcape, будут выведены предупреждения.</description></item><item><title>Зависимости</title><link>https://dopos.github.io/dcape/gettingstarted/dependencies/</link><pubDate>Tue, 28 Jan 2020 00:34:13 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/dependencies/</guid><description>Зависимости linux 64bit с git, make, sed, curl, jq docker docker-compose используется в dcape в формате docker-образа, поэтому отдельной установки не требует.
Пример установки зависимостей:
docker 1 2 3 4 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository &amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;#34; sudo apt install docker-ce docker-ce-cli containerd.io sudo usermod -a -G docker $USER См. также: Install docker
make, git, sed, curl, jq 1 sudo apt install make git sed curl jq</description></item><item><title>gitea</title><link>https://dopos.github.io/dcape/baseapps/gitea/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://dopos.github.io/dcape/baseapps/gitea/</guid><description> Приложение gitea Docker gitea/gitea Назначение git совместимый сервис для работы с репозиториями (если используется несколько серверов, разворачивается только на одном) Gitea - это сервис управления git-репозиториями, который поддерживает
интеграцию с сервисом развертывания приложений (drone) интеграцию с narra по протоколу OAuth2</description></item><item><title>Настройка DNS</title><link>https://dopos.github.io/dcape/gettingstarted/dns/</link><pubDate>Tue, 28 Jan 2020 00:34:13 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/dns/</guid><description>Т.к. dcape разворачивает несколько независимых сервисов, их имена должны быть зарегистрированы в DNS. Предпочтительным является вариант регистрации wildcard DNS record, но можно и регистрировать индивидуально.
Пример имен для сервера srv1.domain.tld:
srv1.domain.tld - для фронтендов narra, enfist, traefik git.srv1.domain.tld - для gitea drone.srv1.domain.tld - для drone port.srv1.domain.tld - для portainer ns.srv1.domain.tld - для powerdns /etc/hosts Вариант для случая, когда dcape разворачивается и используется на локальном компьютере, в т.ч. если у этого компьютера нет сетевых интерфейсов.</description></item><item><title>drone</title><link>https://dopos.github.io/dcape/baseapps/drone/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://dopos.github.io/dcape/baseapps/drone/</guid><description>Приложение drone Docker image Назначение деплой приложений по событиям из gitea Как это работает Приложения (собственные исходные тексты или файлы конфигурации стороннего ПО) размещаются в репозитории на github.com или аналогичном сервисе управления git-репозиториями (может использоваться встроенное приложение gitea, или другой аналогичный сервис). При установке drone указывается адрес сервиса управления git-репозиториями В интерфейсе drone активируется нужный git-репозиторий При пуше коммита в репозиторий, сервис управления активирует webhook всех подключенных экземпляров drone Webhook drone клонирует репозиторий и выполняет инструкции из файла .</description></item><item><title>Установка</title><link>https://dopos.github.io/dcape/gettingstarted/installation/</link><pubDate>Tue, 28 Jan 2020 00:34:13 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/installation/</guid><description>Исходники Рекомендуемым способом копирования файлов на сервер является выполнение git clone. Это позволяет в будущем
обновить исходники для получения информации о проверенных новых версиях используемых приложений увидеть локальные изменения исходников, если их понадобится сохранить 1 2 3 4 cd /opt sudo mkdir dcape &amp;amp;&amp;amp; sudo chown $USER dcape git clone -b v2 --single-branch --depth 1 https://github.com/dopos/dcape.git cd dcape Настройка и запуск Локальный сервер Вариант без поддержки SSL, но с установкой gitea.</description></item><item><title>enfist</title><link>https://dopos.github.io/dcape/baseapps/enfist/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://dopos.github.io/dcape/baseapps/enfist/</guid><description>Приложение enfist Docker ghcr.io/apisite/app-enfist Назначение хранилище файлов конфигурации в postgresql с доступом через браузер и АПИ Enfist - это сервис хранения конфигураций приложений. Конфигурации хранятся в БД в виде Key-value таблицы, где ключ (key) формируется из адреса git репозитория organization--repo_name--branch (организация--проект--ветка), а значение (value) - содержимое .env файла.
Доступ к хранилищу ограничивается narra и осуществляется через фронтенд dcape.
Кроме веб-интерфейса, работа с конфигурациями запуска может осуществляться посредством dcape-config-cli.
Примеры команд, доступных после клонирования (git clone) и настройки (make .</description></item><item><title>Конфигурация</title><link>https://dopos.github.io/dcape/gettingstarted/configuration/</link><pubDate>Tue, 28 Jan 2020 00:34:56 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/configuration/</guid><description>Аргументы &amp;lsquo;make init&amp;rsquo; Благодаря использованию Makefile, любой параметр dcape может быть задан в аргументах команды make init.
Актуальные значения параметров и их описания при выполнении этой команды сохраняются в файле с именем .env (или именем, заданном в параметре CFG).
Актуальный для конкретного экземпляра dcape список параметров зависит от наличия добавленных сервисов.
Следующие параметры имеют ключевое значение для конфигурации dcape:
DCAPE_TAG Идентификатор стека приложений, позволяющий изолировать его от других контейнеров docker (в т.</description></item><item><title>narra</title><link>https://dopos.github.io/dcape/baseapps/narra/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://dopos.github.io/dcape/baseapps/narra/</guid><description> Приложение narra Docker ghcr.io/dopos/narra Назначение сервис OAuth2 авторизации для учетных записей gitea, используемый для ограничения доступа к приватным ресурсам Narra - это OAuth2 прокси для учетных записей gitea, который используется для ограничения доступа к приватным ресурсам:
фронтенд dcape - список развернутых на сервере приложений и сервисов фронтенд traefik фронтенд enfist статистика использования powerdns</description></item><item><title>Отличия dcape v2</title><link>https://dopos.github.io/dcape/gettingstarted/v2changes/</link><pubDate>Tue, 28 Jan 2020 00:34:41 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/v2changes/</guid><description>Dcape v2 отличается от v1:
переездом деплоя на drone сменой версии traefik на v2. добавлением локально создаваемого образа dcape-compose Подробнее об изменениях:
Версия traefik Было: 1.7 Стало: 2.0 В результате изменились
Настройки в docker-compose Теперь для привязки настроек к контейнеру необходимо в имя добавлять уникальное имя приложения для всех приложений, работающих с одной копией traefik. Для этого добавлен параметр APP_TAG, который может быть рассчитан автоматически по hostname ресурса. Этот же параметр можно использовать как префикс всех контейнеров приложения (значение ключа -p команды docker-compose)</description></item><item><title>powerdns</title><link>https://dopos.github.io/dcape/baseapps/powerdns/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://dopos.github.io/dcape/baseapps/powerdns/</guid><description> Приложение powerdns Docker psitrax/powerdns Назначение DNS-сервер для поддержки wildcard domain сертификатов powerdns - это DNS сервер, который поддерживает
хранение зон в БД (пример приложения управления зонами - dcape-dns-config) управление зонами по АПИ (используется в dcape для поддержки wildcard DNS сертификатов)</description></item><item><title>portainer</title><link>https://dopos.github.io/dcape/baseapps/portainer/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://dopos.github.io/dcape/baseapps/portainer/</guid><description>Приложение portainer Docker portainer/portainer Назначение Web-интерфейс к docker portainer - это инструмент для управления инфраструктурой docker (образами, контейнерами, томами и т.д.) с помощью браузера.
Он не используется никакими другими сервисами dcape и включен для удобства эксплуатации серверов.</description></item></channel></rss>