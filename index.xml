<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dopos</title><link>https://dopos.github.io/</link><description>Recent content on dopos</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Sat, 11 Jan 2020 14:09:21 +0900</lastBuildDate><atom:link href="https://dopos.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Приложения</title><link>https://dopos.github.io/dcape/usage/apps/</link><pubDate>Tue, 28 Jan 2020 00:36:14 +0900</pubDate><guid>https://dopos.github.io/dcape/usage/apps/</guid><description>Введение Dcape предназначен для построения gitops (CI/CD) решений, в которых на каждом сервере установлен dcape и на одном - web-сервис git (например: gitea), который по факту изменений в репозитории активирует drone на присоединенных серверах.
После развёртывания сервисов git/drone, задача dcape уже решена, но возникает возможность добавить в деплой:
Makefile.app для использования в директиве include файла Makefile адаптируемого приложения (чтобы не дублировать цели) docker-compose.app.yml для использования в качестве основы для override в адаптируемом приложении Эти файлы добавляются в образ dcape-compose, поэтому доступны и на хостовой системе и при развёртывании.</description></item><item><title>Назначение</title><link>https://dopos.github.io/dcape/purpose/</link><pubDate>Tue, 28 Jan 2020 00:34:51 +0900</pubDate><guid>https://dopos.github.io/dcape/purpose/</guid><description>Цель создания dcape - получить относительно удобный способ запуска docker-приложений простой короткой командой, например
make up - локально git push - удаленно Главная проблема была в том, как повесить несколько контейнеров на порт 80, чтобы запросы к ним проксировались по имени хоста не на основании заранее руками созданного конфига, а по факту старта контейнера - эту задачу решил traefik.
Бонусом он добавил TLS, т.е. возможность получения сертификата для хоста или, когда хостов много - для домена (т.</description></item><item><title>Быстрый старт</title><link>https://dopos.github.io/dcape/gettingstarted/quickstart/</link><pubDate>Tue, 28 Jan 2020 00:34:41 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/quickstart/</guid><description>В случае, если уже
настроен DNS c поддержкой wildcard-record есть сервер gitea (в примере - it.domain.tld) в gitea создан TOKEN на новом сервере установлены зависимости , установка dcape на этом новом сервере может быть произведена так:
1 2 3 4 5 6 7 8 9 git clone --depth 1 https://github.com/dopos/dcape.git cd dcape make install ACME=wild DNS=wild DCAPE_DOMAIN=srv1.domain.tld \ TRAEFIK_ACME_EMAIL=admin@domain.tld \ NARRA_GITEA_ORG=dcape \ DRONE_ADMIN=lekovr \ PDNS_LISTEN=192.168.23.10:53 \ GITEA=https://it.domain.tld \ TOKEN=**token_from_gitea** В PDNS_LISTEN порт изменен на стандартный (по умолчанию: 54) и задан ip, чтобы не возникало конфликта с локальным резолвером.</description></item><item><title>App template</title><link>https://dopos.github.io/dcape/addons/app-template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/addons/app-template/</guid><description>Repo: dcape-app-template
upstream_name application package for dcape.
Upstream Project: upstream_name Docker: template Requirements linux 64bit with git, make, sed installed docker with compose plugin dcape v3 VCS service like Gitea CI/CD service like Woodpecker CI Install Via CI/CD VCS: Fork or mirror this repo in your Git service CI/CD: Activate repo VCS: &amp;ldquo;Test delivery&amp;rdquo;, config sample will be saved to config service (enfist in dcape) Config: Edit config vars and remove .</description></item><item><title>router</title><link>https://dopos.github.io/dcape/coreapps/router/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/coreapps/router/</guid><description>Repo: dcape-app-traefik
Роль в dcape Сервис Docker images router traefik traefik Назначение Агрегация и проксирование www-сервисов развернутых приложений по заданному имени с поддержкой сертификатов Let&amp;rsquo;s Encrypt
Traefik - ключевой сервис dcape. Он решает следующие задачи:
при запуске контейнера проанализировать его метки (label) и добавить контейнер в систему проксирования внешних http(s) запросов, определяя целевой контейнер по имени хоста если конфигурацией предусмотрена работа через TLS - проверить наличие сертификата и, при необходимости, получить или обновить его через сервис Let&amp;rsquo;s Encrypt Особенности Варианты файла конфигурации В составе dcape есть три варианта файла конфигурации traefik:</description></item><item><title>Обновление</title><link>https://dopos.github.io/dcape/apps/update/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/apps/update/</guid><description>При деплое через CI/CD В сервисе управления конфигурациями отредактировать настройки приложения, изменив параметр IMG_VER В сервисе управления исходниками повторно выполнить тестовую доставку При деплое через терминал В каталоге, где развернуто приложение дикейп, изменить параметр IMG_VER в файле .env Выполнить команду make up</description></item><item><title>Обновление</title><link>https://dopos.github.io/dcape/usage/update/</link><pubDate>Tue, 28 Jan 2020 00:39:06 +0900</pubDate><guid>https://dopos.github.io/dcape/usage/update/</guid><description>Если dcape был установлен командой git clone, для его обновления используется команда git pull, после выполнения которой необходимо обновить файл .env
Обновление файла .env При обновлении проекта возможно появление новых переменных в .env файле.
Алгоритм обновления .env с сохранением старых настроек:
1 2 mv .env .env.bak make init Другой вариант:
1 2 mv .env .env.1019 make init CFG_BAK=.env.1019 Все совпадающие значения будут взяты из .env.bak (т.е. из старого конфига).
Если изменятся номера версий используемых docker-образов сервисов dcape, будут выведены предупреждения.</description></item><item><title>Результат работы</title><link>https://dopos.github.io/dcape/features/</link><pubDate>Tue, 28 Jan 2020 00:34:51 +0900</pubDate><guid>https://dopos.github.io/dcape/features/</guid><description>Развертывание dcape имеет результатом 2 файла - docker-compose.yml и .env, которые позволяют командой make up запустить весь стек выбранных для конкретного сервера приложений. Все эти приложения доступны на dockerhub и все нужное для их запуска командой docker-compose up может быть подготовлено вручную, однако dcape добавляет в процесс подготовки такого решения следующие возможности:
файл параметров (.env) формируется программно, что позволяет использовать в значениях переменные генерировать необходимые приложениям пароли и токены формировать взаимосвязанные настройки приложений файл конфигурации контейнеров (docker-compose.</description></item><item><title>Зависимости</title><link>https://dopos.github.io/dcape/gettingstarted/dependencies/</link><pubDate>Tue, 28 Jan 2020 00:34:13 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/dependencies/</guid><description>Зависимости linux 64bit с git, make, sed, curl, jq docker docker-compose используется в dcape в формате docker-образа, поэтому отдельной установки не требует.
Пример установки зависимостей:
docker 1 2 3 4 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository &amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;#34; sudo apt install docker-ce docker-ce-cli containerd.io sudo usermod -a -G docker $USER См. также: Install docker
make, git, sed, curl, jq 1 sudo apt install make git sed curl jq</description></item><item><title>db</title><link>https://dopos.github.io/dcape/coreapps/db/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/coreapps/db/</guid><description>Repo: dcape-app-postgres
Роль в dcape Сервис Docker image db postgresql / Citus postgres / citus Назначение Размещение баз данных приложений, которым требуется СУБД.
СУБД postgresql используется следующими сервисами dcape:
gitea woodpecker enfist powerdns Кроме этого, контейнер доступен для других приложений, развертываемых под dcape.
Особенности Размещение файлов Постоянные данные контейнера размещаются в каталоге var/db в следующих подкаталогах:
data - внутренние файлы postgresql init - скрипты, которые выполняются при старте контейнера backup - размещение дампов баз для импорта/экспорта conf.</description></item><item><title>Nginx sample app</title><link>https://dopos.github.io/dcape/addons/nginx-sample/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/addons/nginx-sample/</guid><description>Repo: dcape-app-nginx-sample
NGINX sample application package for dcape.
Docker image used nginx Features This project contains
reference versions of core files for all of dcape applications since dcape v2: Makefile .drone.yml dcape-compose.yml samples for some nginx features: log real user&amp;rsquo;s ip from traefik data send gzipped static files custom error pages Requirements linux 64bit (git, make, sed) docker dcape v3 Git service (github, gitea or gogs) Install By mouse (deploy with drone) Gitea: Fork or mirror this repo in your Git service Drone: Activate repo Gitea: &amp;ldquo;Test delivery&amp;rdquo;, config sample will be saved to enfist Enfist: Edit config and remove .</description></item><item><title>Установка</title><link>https://dopos.github.io/dcape/apps/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/apps/install/</guid><description>Через CI/CD В сервисе управления исходниками сделать форк или зеркало этого проекта Активировать полученный репозиторий в CI/CD В сервисе управления исходниками выполнить тестовую доставку, она отработает с ошибкой, но в сервисе управления конфигурациями (в dcape это enfist) будет создан пример конфигурации. В сервисе управления конфигурациями отредактировать настройки приложения и удалить .sample в имени настроек В сервисе управления исходниками повторно выполнить тестовую доставку - сервис будет развернут и запущен After that just change source and do git push - app will be reinstalled and restarted on CI/CD host Через терминал На целевом сервере после установки dcape выполнить команды</description></item><item><title>Настройка DNS</title><link>https://dopos.github.io/dcape/gettingstarted/dns/</link><pubDate>Tue, 28 Jan 2020 00:34:13 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/dns/</guid><description>Т.к. dcape разворачивает несколько независимых сервисов, их имена должны быть зарегистрированы в DNS. Предпочтительным является вариант регистрации wildcard DNS record, но можно и регистрировать индивидуально.
Пример имен для сервера srv1.domain.tld:
srv1.domain.tld - для фронтендов narra, enfist, traefik git.srv1.domain.tld - для gitea drone.srv1.domain.tld - для drone port.srv1.domain.tld - для portainer ns.srv1.domain.tld - для powerdns /etc/hosts Вариант для случая, когда dcape разворачивается и используется на локальном компьютере, в т.ч. если у этого компьютера нет сетевых интерфейсов.</description></item><item><title>PG Backup</title><link>https://dopos.github.io/dcape/addons/pg-backup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/addons/pg-backup/</guid><description>Repo: dcape-app-pg-backup
Postgresql database backup application package for dcape v3.
Docker image used dcape v1: none (used running dcape_db container) dcape v2: internally built image with name stored in ${DCAPE_COMPOSE} drone var dcape v3: dcape-compose (cron uses running dcape_db container) Requirements linux 64bit (git, make, wget, gawk, openssl) docker dcape v3 Git service (github, gitea or gogs) Usage Fork this repo in your Git service Setup deploy hook Run &amp;ldquo;Test delivery&amp;rdquo; (config sample will be created in dcape) Edit and save config (enable deploy etc) Run &amp;ldquo;Test delivery&amp;rdquo; again (app will be installed and started on webhook host) See also: Deploy setup (in Russian)</description></item><item><title>vcs</title><link>https://dopos.github.io/dcape/coreapps/vcs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/coreapps/vcs/</guid><description> Repo: dcape-app-gitea
Роль в dcape Сервис Docker images vcs gitea gitea Назначение Git совместимый сервис для работы с репозиториями (если используется несколько серверов, разворачивается только на одном)/
Gitea - это сервис управления git-репозиториями, который поддерживает
интеграцию с сервисом развертывания приложений woodpecker интеграцию с narra по протоколу OAuth2</description></item><item><title>Ядро dcape</title><link>https://dopos.github.io/dcape/core/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/core/</guid><description>Repo: dcape
Dcape - это инструмент для развёртывания docker-приложений по технологии GitOps, который с помощью make и docker-compose, позволяет решить следующие задачи:
командами make up запускать приложения, использующие общий порт (например 80) БД командой git push удаленно разворачивать приложения на одном или нескольких компьютерах через АПИ или web-интерфейс управлять конфигурациями приложений ограничивать заданной группой пользователей доступ к интерфейсам управления используемым ПО обслуживать работу с letsencrypt сертификатами wildcard-доменов управлять инфраструктурой docker Dcape представляет собой набор Makefile и настроек, позволяющий подготовить и развернуть на сервере комплекс согласованных между собой приложений.</description></item><item><title>Установка</title><link>https://dopos.github.io/dcape/gettingstarted/installation/</link><pubDate>Tue, 28 Jan 2020 00:34:13 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/installation/</guid><description>Исходники Рекомендуемым способом копирования файлов на сервер является выполнение git clone. Это позволяет в будущем
обновить исходники для получения информации о проверенных новых версиях используемых приложений увидеть локальные изменения исходников, если их понадобится сохранить 1 2 3 4 cd /opt sudo mkdir dcape &amp;amp;&amp;amp; sudo chown $USER dcape git clone --depth 1 https://github.com/dopos/dcape.git cd dcape Настройка и запуск Локальный сервер Вариант без поддержки SSL, но с установкой gitea. Выполняется в 3 шага, т.</description></item><item><title>cicd</title><link>https://dopos.github.io/dcape/coreapps/cicd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/coreapps/cicd/</guid><description>Repo: dcape-app-woodpecker
Роль в dcape Сервис Docker images cicd Woodpecker CI server, agent Назначение Деплой приложений при получении webhook от VCS.
Как это работает Приложения (собственные исходные тексты или файлы конфигурации стороннего ПО) размещаются в репозитории на github.com или аналогичном сервисе управления git-репозиториями (может использоваться встроенное приложение gitea, или другой аналогичный сервис). При установке CI/CD указывается адрес сервиса управления git-репозиториями В интерфейсе CI/CD активируется нужный git-репозиторий При пуше коммита в репозиторий, сервис управления (VCS) активирует webhook всех подключенных экземпляров CI/CD Webhook CI/CD клонирует репозиторий и выполняет инструкции из .</description></item><item><title>Config CLI</title><link>https://dopos.github.io/dcape/addons/config-cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/addons/config-cli/</guid><description>Repo: dcape-config-cli
Command line interface for dcape config storage enfist.
Docker image used none (used connect to remote dcape config service) Requirements linux (git, make, curl, jq) Setup git clone https://github.com/dopos/dcape-config-cli.git make .env [write dcape attributes to .env] CIS access token доступен на сервере CIS после авторизации (для авторизации открыть ссылку &amp;ldquo;Config store&amp;rdquo; и обновить страницу)
Usage make ls - получить список конфигураций на сервере make cat TAG=name - получить из хранилища конфигурацию для тега name и вывести на STDOUT make get TAG=name - получить из хранилища конфигурацию для тега name и сохранить в файл name.</description></item><item><title>Минимальная конфигурация</title><link>https://dopos.github.io/dcape/gettingstarted/minimal/</link><pubDate>Wed, 07 Feb 2024 00:34:41 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/minimal/</guid><description>Dcape может быть развернут в конфигурации CLI-only, с минимальным набором контейнеров
router (traefik) - реверс-прокси и сертификаты db (postgresql) - БД для приложений (не используется dcape) manager (portainer) - www-интерфейс для управления контейнерами (не используется dcape) при этом
Сертификаты LE обновляются через HTTP-1 (нет поддержки wildcard доменов) Доступ в traefik dashboard происходит по фиксированному паролю Далее описано, как получить такую конфигурацию в текущей версии dcape
1 2 3 4 5 git clone --single-branch --depth 1 https://github.</description></item><item><title>config</title><link>https://dopos.github.io/dcape/coreapps/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/coreapps/config/</guid><description>Repo: dcape-app-enfist
Роль в dcape Сервис Docker image config enfist app-enfist Назначение Enfist - это сервис хранения конфигураций приложений. Конфигурации хранятся в БД в виде Key-value таблицы, где ключ (key) формируется из адреса git репозитория organization--repo_name--branch (организация--проект--ветка), а значение (value) - содержимое .env файла.
Доступ к хранилищу ограничивается narra и осуществляется через фронтенд dcape.
Кроме веб-интерфейса, работа с конфигурациями запуска может осуществляться посредством dcape-config-cli.
Примеры команд, доступных после клонирования (git clone) и настройки (make .</description></item><item><title>DNS Config</title><link>https://dopos.github.io/dcape/addons/dns-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/addons/dns-config/</guid><description>Repo: dcape-dns-config
Config for dcape based powerdns server
This project contains Makefile and sample sql zone definition for loading zones into PowerDNS server.
Requirements linux 64bit (git, make, wget, gawk, openssl) docker dcape Git service (github, gitea or gogs) Usage fork this project into your dcape gitea in gitea project settings setup hook for server where powerdns service running clone project locally from gitea add your zones .sql by example from domain.</description></item><item><title>Конфигурация</title><link>https://dopos.github.io/dcape/gettingstarted/configuration/</link><pubDate>Tue, 28 Jan 2020 00:34:56 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/configuration/</guid><description>Аргументы &amp;lsquo;make init&amp;rsquo; Благодаря использованию Makefile, любой параметр dcape может быть задан в аргументах команды make init.
Актуальные значения параметров и их описания при выполнении этой команды сохраняются в файле с именем .env (или именем, заданном в параметре CFG).
Актуальный для конкретного экземпляра dcape список параметров зависит от наличия добавленных сервисов.
Следующие параметры имеют ключевое значение для конфигурации dcape:
DCAPE_TAG Идентификатор стека приложений, позволяющий изолировать его от других контейнеров docker (в т.</description></item><item><title>auth</title><link>https://dopos.github.io/dcape/coreapps/auth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/coreapps/auth/</guid><description> Repo: dcape-app-narra
Роль в dcape Сервис Docker image auth narra ghcr.io/dopos/narra Назначение Сервис OAuth2 авторизации, который разрешает доступ к ресурсу только участникам заданной в настройках организации gitea.
Ресурсы dcape с ограниченным доступом фронтенд dcape - список развернутых на сервере приложений и сервисов настройки приложений dcape router dasboard статистика ns Подключение авторизации к приложениям dcape docker-compose.yml
1 2 3 4 services: app: labels: - &amp;#34;traefik.http.routers.${APP_TAG}.middlewares=narra&amp;#34; # Require gitea auth</description></item><item><title>Отличия dcape v2</title><link>https://dopos.github.io/dcape/gettingstarted/v2changes/</link><pubDate>Tue, 28 Jan 2020 00:34:41 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/v2changes/</guid><description>Dcape v2 отличается от v1:
переездом деплоя на drone сменой версии traefik на v2. добавлением локально создаваемого образа dcape-compose Подробнее об изменениях:
Версия traefik Было: 1.7 Стало: 2.0 В результате изменились
Настройки в docker-compose Теперь для привязки настроек к контейнеру необходимо в имя добавлять уникальное имя приложения для всех приложений, работающих с одной копией traefik. Для этого добавлен параметр APP_TAG, который может быть рассчитан автоматически по hostname ресурса. Этот же параметр можно использовать как префикс всех контейнеров приложения (значение ключа -p команды docker-compose)</description></item><item><title>ns</title><link>https://dopos.github.io/dcape/coreapps/ns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/coreapps/ns/</guid><description>Repo: dcape-app-powerdns
Роль в dcape Сервис Docker images ns PowerDNS ghcr.io/dopos/powerdns-alpine Назначение Wildcard-DNS для сертификатов LetsEncrypt Сервис DNS Сервис может быть развернут как отдельное приложение dcape.</description></item><item><title>manager</title><link>https://dopos.github.io/dcape/coreapps/manager/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/coreapps/manager/</guid><description>Repo: dcape-app-portainer
Роль в dcape Сервис Docker image manager portainer portainer-ce Назначение Инструмент для управления инфраструктурой docker (образами, контейнерами, томами и т.д.) с помощью браузера.
Он не используется никакими другими сервисами dcape и включен для удобства эксплуатации серверов.</description></item><item><title>История изменений</title><link>https://dopos.github.io/dcape/changelog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dopos.github.io/dcape/changelog/</guid><description>The format is based on Keep a Changelog
and this project adheres to Semantic Versioning.
[3.1.0] - 2024-05-27 Added compare local app versions with upstream &amp;amp; update local (make ver-cmp [ VER_UPDATE=yes]) debug for gitea exchange (including POST debug) Fixed APPS recurse CICD_ADMIN empty AUTH_URL, DCAPE_ADMIN_USER read APP_ROOT from .env standalone .config-link &amp;lsquo;version&amp;rsquo; is obsolete copyright years [3.0.2] - 2023-12-18 Added docs: Upgrade dcape v2 to v3 CHANGELOG.md DCAPE_NET_EXISTS DB_CONTAINER for apps ENFIST_BRANCH APP_ROOT_OPTS, .</description></item></channel></rss>