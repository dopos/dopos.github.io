<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Начало работы on dopos</title><link>https://dopos.github.io/dcape/gettingstarted/</link><description>Recent content in Начало работы on dopos</description><generator>Hugo -- gohugo.io</generator><language>ru</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Tue, 28 Jan 2020 00:34:39 +0900</lastBuildDate><atom:link href="https://dopos.github.io/dcape/gettingstarted/index.xml" rel="self" type="application/rss+xml"/><item><title>Быстрый старт</title><link>https://dopos.github.io/dcape/gettingstarted/quickstart/</link><pubDate>Tue, 28 Jan 2020 00:34:41 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/quickstart/</guid><description>В случае, если уже
настроен DNS c поддержкой wildcard-record есть сервер gitea (в примере - it.domain.tld) в gitea создан TOKEN на новом сервере установлены зависимости , установка dcape на этом новом сервере может быть произведена так:
1 2 3 4 5 6 7 8 9 git clone -b v2 --single-branch --depth 1 https://github.com/dopos/dcape.git cd dcape make install ACME=wild DNS=wild DCAPE_DOMAIN=srv1.domain.tld \ TRAEFIK_ACME_EMAIL=admin@domain.tld \ NARRA_GITEA_ORG=dcape \ DRONE_ADMIN=lekovr \ PDNS_LISTEN=192.168.23.10:53 \ GITEA=https://it.domain.tld \ TOKEN=**token_from_gitea** В PDNS_LISTEN порт изменен на стандартный (по умолчанию: 54) и задан ip, чтобы не возникало конфликта с локальным резолвером.</description></item><item><title>Зависимости</title><link>https://dopos.github.io/dcape/gettingstarted/dependencies/</link><pubDate>Tue, 28 Jan 2020 00:34:13 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/dependencies/</guid><description>Зависимости linux 64bit с git, make, sed, curl, jq docker docker-compose используется в dcape в формате docker-образа, поэтому отдельной установки не требует.
Пример установки зависимостей:
docker 1 2 3 4 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository &amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;#34; sudo apt install docker-ce docker-ce-cli containerd.io sudo usermod -a -G docker $USER См. также: Install docker
make, git, sed, curl, jq 1 sudo apt install make git sed curl jq</description></item><item><title>Настройка DNS</title><link>https://dopos.github.io/dcape/gettingstarted/dns/</link><pubDate>Tue, 28 Jan 2020 00:34:13 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/dns/</guid><description>Т.к. dcape разворачивает несколько независимых сервисов, их имена должны быть зарегистрированы в DNS. Предпочтительным является вариант регистрации wildcard DNS record, но можно и регистрировать индивидуально.
Пример имен для сервера srv1.domain.tld:
srv1.domain.tld - для фронтендов narra, enfist, traefik git.srv1.domain.tld - для gitea drone.srv1.domain.tld - для drone port.srv1.domain.tld - для portainer ns.srv1.domain.tld - для powerdns /etc/hosts Вариант для случая, когда dcape разворачивается и используется на локальном компьютере, в т.ч. если у этого компьютера нет сетевых интерфейсов.</description></item><item><title>Установка</title><link>https://dopos.github.io/dcape/gettingstarted/installation/</link><pubDate>Tue, 28 Jan 2020 00:34:13 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/installation/</guid><description>Исходники Рекомендуемым способом копирования файлов на сервер является выполнение git clone. Это позволяет в будущем
обновить исходники для получения информации о проверенных новых версиях используемых приложений увидеть локальные изменения исходников, если их понадобится сохранить 1 2 3 4 cd /opt sudo mkdir dcape &amp;amp;&amp;amp; sudo chown $USER dcape git clone -b v2 --single-branch --depth 1 https://github.com/dopos/dcape.git cd dcape Настройка и запуск Локальный сервер Вариант без поддержки SSL, но с установкой gitea.</description></item><item><title>Минимальная конфигурация</title><link>https://dopos.github.io/dcape/gettingstarted/minimal/</link><pubDate>Wed, 07 Feb 2024 00:34:41 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/minimal/</guid><description>Dcape может быть развернут в конфигурации CLI-only, с минимальным набором контейнеров
router (traefik) - реверс-прокси и сертификаты db (postgresql) - БД для приложений (не используется dcape) manager (portainer) - www-интерфейс для управления контейнерами (не используется dcape) при этом
Сертификаты LE обновляются через HTTP-1 (нет поддержки wildcard доменов) Доступ в traefik dashboard происходит по фиксированному паролю Далее описано, как получить такую конфигурацию в текущей версии dcape
1 2 3 4 5 git clone --single-branch --depth 1 https://github.</description></item><item><title>Конфигурация</title><link>https://dopos.github.io/dcape/gettingstarted/configuration/</link><pubDate>Tue, 28 Jan 2020 00:34:56 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/configuration/</guid><description>Аргументы &amp;lsquo;make init&amp;rsquo; Благодаря использованию Makefile, любой параметр dcape может быть задан в аргументах команды make init.
Актуальные значения параметров и их описания при выполнении этой команды сохраняются в файле с именем .env (или именем, заданном в параметре CFG).
Актуальный для конкретного экземпляра dcape список параметров зависит от наличия добавленных сервисов.
Следующие параметры имеют ключевое значение для конфигурации dcape:
DCAPE_TAG Идентификатор стека приложений, позволяющий изолировать его от других контейнеров docker (в т.</description></item><item><title>Отличия dcape v2</title><link>https://dopos.github.io/dcape/gettingstarted/v2changes/</link><pubDate>Tue, 28 Jan 2020 00:34:41 +0900</pubDate><guid>https://dopos.github.io/dcape/gettingstarted/v2changes/</guid><description>Dcape v2 отличается от v1:
переездом деплоя на drone сменой версии traefik на v2. добавлением локально создаваемого образа dcape-compose Подробнее об изменениях:
Версия traefik Было: 1.7 Стало: 2.0 В результате изменились
Настройки в docker-compose Теперь для привязки настроек к контейнеру необходимо в имя добавлять уникальное имя приложения для всех приложений, работающих с одной копией traefik. Для этого добавлен параметр APP_TAG, который может быть рассчитан автоматически по hostname ресурса. Этот же параметр можно использовать как префикс всех контейнеров приложения (значение ключа -p команды docker-compose)</description></item></channel></rss>